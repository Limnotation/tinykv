syntax = "proto3";
package metapb;

import "gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

message Cluster {
    uint64 id = 1;
    // max peer count for a region.
    // scheduler will do the auto-balance if region peer count mismatches.
    uint32 max_peer_count = 2;
    // more attributes......
}

enum StoreState {
    Up = 0;
    Offline = 1;
    Tombstone = 2;
}

// Store stands for an instance of tinykv-server.
message Store {
    // Store ID.
    uint64 id = 1;
    // Address for accepting client requests.
    string address = 2;
    // State of the store, one of Offline, Up, Tombstone.
    StoreState state = 3;
}

message RegionEpoch {
    // Conf change version, auto increment when add or remove peer
    uint64 conf_ver = 1;
    // Region version, auto increment when split or merge
    uint64 version = 2;
}

// Region is a collection of Peers, also called Raft group
message Region {
    // Region ID. This ID is globally unique. It is generated by a 
    // central Placement Driver(PD).
    uint64 id = 1;
    // Region key range [start_key, end_key). During bootstrap, both
    // start_key and end_key will be None.
    bytes start_key = 2;
    bytes end_key = 3;
    RegionEpoch region_epoch = 4;
    repeated Peer peers = 5;
}

// Peer stands for a Raft node which is running on a Store
message Peer {     
    // Raft node ID.     
    uint64 id = 1;
    // Store ID that this peer lives.
    uint64 store_id = 2;
}
